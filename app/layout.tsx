import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { AuthProvider } from "@/providers/auth-provider";
import { Toaster } from "react-hot-toast";
import { getServerSession } from "next-auth";
import { authOptions } from "./api/auth/authOptions";
import { randomBytes } from "crypto";

const inter = Inter({ subsets: ["latin"] });

const nonce = randomBytes(128).toString("base64");
const cspHeader = `
default-src 'self';
script-src 'self' 'nonce-${nonce}' 'strict-dynamic';
style-src 'self' 'nonce-${nonce}';
img-src 'self' blob: data:;
font-src 'self';
object-src 'none';
base-uri 'self';
form-action 'self';
frame-ancestors 'none';
block-all-mixed-content;
upgrade-insecure-requests;
`;

const csp = cspHeader.replace(/\s{2,}/g, " ").trim();

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(authOptions);
  return (
    <html lang="en" suppressHydrationWarning className="dark">
      <head nonce={nonce}>
        <meta httpEquiv="Content-Security-Policy" content={csp} />
        <link
          href="https://cdn.jsdelivr.net/npm/remixicon@4.0.0/fonts/remixicon.css"
          rel="stylesheet"
        />
      </head>
      <body
        className={cn(
          "relative min-h-screen font-sans antialiased",
          inter.className
        )}
      >
        <AuthProvider session={session}>
          <Toaster />
          {children}
        </AuthProvider>
        <script nonce={nonce} />
      </body>
    </html>
  );
}
